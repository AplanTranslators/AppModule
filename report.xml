<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="3" skipped="0" tests="38" time="0.188" timestamp="2025-08-15T17:05:37.464900+03:00" hostname="DESKTOP-QNI4VUN"><testcase classname="app.unit_tests.test_utils" name="test_singleton_meta_behavior" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_format_time_m_s" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_format_time_date_h_m_s" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_format_time_h_m_s" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_counters_initial_values" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_incriese" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_decriese" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_decriese_not_below_zero" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_get_invalid_counter_type" time="0.003" /><testcase classname="app.unit_tests.test_utils" name="test_incriese_invalid_type" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_deinit_resets_values" time="0.003" /><testcase classname="app.unit_tests.test_utils" name="test_get_returns_correct_value" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_logger_methods_write_output[debug]" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_logger_methods_write_output[info]" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_logger_methods_write_output[warning]" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_logger_methods_write_output[error]" time="0.003" /><testcase classname="app.unit_tests.test_utils" name="test_logger_methods_write_output[critical]" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_logger_temp_color_usage" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_logger_activate_deactivate" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_logger_activate_deactivate_cycle" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_logger_delimetr_without_text" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_logger_delimetr_with_text" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_logger_delimetr_long_text" time="0.004" /><testcase classname="app.unit_tests.test_utils" name="test_remove_trailing_comma" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_addEqueToBGET" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_replaceValueParametrsCalls" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_addSpacesAroundOperators" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_valuesToAplanStandart" time="0.002" /><testcase classname="app.unit_tests.test_utils" name="test_addBracketsAfterNegation" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_addLeftValueForUnaryOrOperator" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_addBracketsAfterTilda" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_parallelAssignment2Assignment" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_doubleOperators2Aplan" time="0.002"><failure message="AssertionError: assert 'None = None + 1' == 'x = x - 1'&#10;  &#10;  #x1B[0m#x1B[91m- x = x - 1#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ None = None + 1#x1B[39;49;00m#x1B[90m#x1B[39;49;00m">app/unit_tests/test_utils.py:296: in test_doubleOperators2Aplan
    assert sf.doubleOperators2Aplan("x--") == "x = x - 1"
E   AssertionError: assert 'None = None + 1' == 'x = x - 1'
E     
E     #x1B[0m#x1B[91m- x = x - 1#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ None = None + 1#x1B[39;49;00m#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="app.unit_tests.test_utils" name="test_notConcreteIndex2AplanStandart_with_dimension" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_notConcreteIndex2AplanStandart_without_dimension" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_vectorSizes2AplanStandart_single" time="0.001" /><testcase classname="app.unit_tests.test_utils" name="test_generatePythonStyleTernary" time="0.001"><failure message="AssertionError: assert '(1  if x &gt; 0 else 0)' == '(1 if x &gt; 0 else 0)'&#10;  &#10;  #x1B[0m#x1B[91m- (1 if x &gt; 0 else 0)#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ (1  if x &gt; 0 else 0)#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  ?    +#x1B[90m#x1B[39;49;00m">app/unit_tests/test_utils.py:324: in test_generatePythonStyleTernary
    assert sf.generatePythonStyleTernary("(x &gt; 0) ? 1 : 0") == "(1 if x &gt; 0 else 0)"
E   AssertionError: assert '(1  if x &gt; 0 else 0)' == '(1 if x &gt; 0 else 0)'
E     
E     #x1B[0m#x1B[91m- (1 if x &gt; 0 else 0)#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ (1  if x &gt; 0 else 0)#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     ?    +#x1B[90m#x1B[39;49;00m</failure></testcase><testcase classname="app.unit_tests.test_utils" name="test_replace_cpp_operators" time="0.002"><failure message="AssertionError: assert 'x  //  y' == 'x // y'&#10;  &#10;  #x1B[0m#x1B[91m- x // y#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  #x1B[92m+ x  //  y#x1B[39;49;00m#x1B[90m#x1B[39;49;00m&#10;  ?  +    +#x1B[90m#x1B[39;49;00m">app/unit_tests/test_utils.py:342: in test_replace_cpp_operators
    assert sf.replace_cpp_operators("x / y") == "x // y"
E   AssertionError: assert 'x  //  y' == 'x // y'
E     
E     #x1B[0m#x1B[91m- x // y#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     #x1B[92m+ x  //  y#x1B[39;49;00m#x1B[90m#x1B[39;49;00m
E     ?  +    +#x1B[90m#x1B[39;49;00m</failure></testcase></testsuite></testsuites>